extends layout

block content

	div
		ul
			li
				a(href="/images") Images
			li
				a(href="/cdn") CDN Prepare
			li
				a(href="/emumovies") EmuMovies Content

	div(class="systemid")
		h3 System ID
		p This is a required definition for most of the functionality below. It usually defines the folder name denoting a system type (eg nes, gen, gb, gba, a2600). Please be sure to fill this in otherwise the commands below will not work!
		input#system
	
	div(class="panel")
		h3 Decompress
		p 
			| Put all files (7z compressed) of a GoodMerged set into 
			span(class="folder") /00 - starthere/[system id]/
			| . This will command will decompress all those files into folders in 
			span(class="folder") /01 - decopressed/[system id]/

		button(onclick='$("#decompress").text("working");$.get("/decompress?system=" + $("#system").val(), function(response) { $("#decompress").text(JSON.stringify(response)); })') GO!
		p
			| Scan title folders only. If you have some custom logic for changing file names (usually because they don't conform to GoodTools codes), you can skip the decompress step and simply run the post-step. I found this most useful for gb (PD) files which had been extracted but I needed to sort them between gb and gbc results.
		button(onclick='$("#decompress").text("working");$.get("/decompress?system=" + $("#system").val() + "&scan=true", function(response) { $("#decompress").text(response); })') Scan Only
		div#decompress(class="response")

	div(class="panel")
		h3 Create Rom Folders
		p
			| New technique! Just type the name of the title folder(s) in to complete this process. All files in the 
			span(class="folder") /01 - decompressed/[systemid]/[folder name]/
			| will be placed into their own parent folder and then put back in the 
			span(class="folder") /01 - decompressed/[systemid] 
			| folder. The original folder will then be deleted!
		p
			| To perform this task for multiple folders, use a comma delimited list
		div
			input#romfoldersbyname
			|  (eg Public Domain, Videos)
		button(onclick='$("#romfolderbyname").text("working");$.get("/romfolderbyname?folders=" + $("#romfoldersbyname").val() + "&system=" + $("#system").val(), function(response) { $("#romfolderbyname").text(response); })') GO!
		div#romfolderbyname(class="response")

	div(class="panel util")
		h3 Compress
		p(class="requied") REQUIED: Decompress
		p
			| Here we compress individual rom files from each title folder in 
			span(class="folder") /01 - decompressed/[systemid]/
			| . Can you filter out which rom files are compressed as well to reduce the set. The resulting files will be placed in 
			span(class="folder") /02 - compressed/[systemid]/
		p
			| Specify which compression method to use:
		div
			input(type="radio", name="compresstype", value="none")
			| None
		div
			input(type="radio", name="compresstype", value="zip", checked)
			| Zip 
		p
			| You can also specify which rom files you want to compress. Please read the descriptions of each of the following:
		div
			input(type="radio", name="compressfilter", value="0", checked)
			| None. All rom files will be compressed.
		div
			input(type="radio", name="compressfilter", value="1")
			| Verified Only. Any file with the verified flag in its filename [!], will be compressed, all others will be ignored
		div
			input(type="radio", name="compressfilter", value="2")
			| Unverified in subfolder. In this mode, the verified files (with [!] in their name) will be compressed in the base title folder while all others will be compressed into a subfolder.
		br
		button(onclick='$("#compress").text("working");$.get("/compress?system=" + $("#system").val() + "&compression=" + $("input[name=compresstype]:checked").val() + "&filter=" + $("input[name=compressfilter]:checked").val(), function(response) { $("#compress").text(response); })') GO!
		div#compress(class="response")

	div(class="panel util")
		h3 Alpha Sort
		p(class="requied") REQUIED: Decompress or Compress
		p
			| In this step, we can place title folders from either 
			span(class="folder") /01 - decompressed/[systemid]/
			|  or 
			span(class="folder") /02 - compressed/[systemid]/
			|  and place them into higher level folders which represent the letter(s) that title begins with. This helps with browsing for the right title. The resulting structure can be found in 
			span(class="folder") /04 - alphasort/[systemid]/
			| .
		p
			| Specify the location from which to sort title folders from:
		div
			input(type="radio", name="alphasource", value="compressed", checked)
			| Compressed
		div
			input(type="radio", name="alphasource", value="decompressed")
			| Decompressed
		p
			| You can also override the number of letters to merge files into at the top level (eg 2 is A-B, C-D while 3 is A-C, D-F)
		div
			input#alphastep(value="1")
		br
		button(onclick='$("#alphasort").text("working");$.get("/alphasort?system=" + $("#system").val() + "&source=" + $("input[name=alphasource]:checked").val() + "&step=" + $("#alphastep").val(), function(response) { $("#alphasort").text(response); })') GO!
		div#alphasort(class="response")
	
	div(class="panel util")
		h3 Take Top Rom Choice
		p(class="requied") REQUIED: Decompress, optionally Compress and the Rom Folders step too.
		p
			| This function might be useful when collecting roms for systems like RecalBox or RetroPie were we want a single romfile for each title and more than that, the most appropriate rom file :)
		p
			| In this step, we scan each title folder in
			span(class="folder") /01 - decompressed/[systemid]/
			|  and using the same "FindBestRom" function as used in generating the Masterfile, take the highest scoring rom file and copy to 
			span(class="folder") /05 - topchoice/[systemid]/
			| .
		p
			| You might want to set a lower limit for games to take. For instance, you may not want titles whose game's are scored too low. See the chart on the Masterfile step to determine what you might want to use. The score you define here is inclusive.
		div
			input#topchoicelowerlimit(value="250")
		p
			| Specify the location from which to source the best rom file from:
		div
			input(type="radio", name="topsource", value="compressed", checked)
			| Compressed
		div
			input(type="radio", name="topsource", value="decompressed")
			| Decompressed
		p
			| As a side note, if you are collecting roms for an emulation system like RecalBox, you might want to consider that some games have pretty awesome hacks. Also consider Prototype versions of titles and maybe even Public Domain stuff. Keep in mind to remove or split out Public Domain files.
		br
		button(onclick='$("#topchoice").text("working");$.get("/topchoice?system=" + $("#system").val() + "&source=" + $("input[name=topsource]:checked").val() + "&lowerlimit=" + $("#topchoicelowerlimit").val() + "&flatten=true", function(response) { $("#topchoice").text(response); })') GO!
		div#topchoice(class="response")

	div(class="panel util")
		h3 Mame
		p(class="requied") REQUIED: 00 - starthere/arcade should be filled with mame roms		
		button(onclick='$("#mameworking").text("working");$.get("/mame?task=build", function(response) { $("#mameworking").text(response); })') GO!
		div#mameworking(class="response")
	
	div(class="panel")
		h3 Create Masterfile
		p(class="requied") REQUIED: The decompressed command is completed, ideally the rom folders command as well.
		p 
			| This command will parse each folder in 
			span(class="folder") /01 - decompressed/[systemid]/
			|  and assign a score to each rom file based on its file name. The goal is to find the rom file which is most suitable for playing (the top choice as I call it). For instance, a file name with (U) and [!] will score very high since these denote a US game which has been verified. See the 
			span(class="file") findbestrom.js
			|  file for how scoring is determined. The resulting file is called 
			span(class="file") [system id]_master
			|  and can be found in 
			span(class="folder") /06 - datafile/
			|  . It is a json formatted (not human consumable) file which contains the score for each file in a rom folder as well as denoting the top scoring file.
		p
			| Ok! Let's try and provide some insight into your scoring system for each rom file here. Try and keep this up-to-date for reference:
		p
			| 499-450: pass over all english regions with playable [!] (english regions include (U),(E), etc)
			br
			| 449-400: pass over all english regions, no brackets
			br
			| 399-350: all non-english regions with playable [!] (this is the line between domestic and foreign)
			br
			| 349-300: pass over all non-english regions, no brackets.
			br
			| 299-250: has playable [!] with no matching region data
			br
			| 249- : all scores that fall below 250 are ranked based on a variety of factors. Typically we will not get boxart for titles that rank below 250.

		button(onclick='$("#masterfile").text("working");$.get("/masterfile?system=" + $("#system").val(), function(response) { $("#masterfile").text(response); })') GO!
		div#masterfile(class="response")

	div(class="panel")
		h3 Clean up
		p
			| Using the values typed in for system and CDN Ready steps, let's clean up all the folders used:
			ul
				li 
					span(class="folder") /00 - starthere/[systemid]/
				li 
					span(class="folder") /01 - decompressed/[systemid]/
				li 
					span(class="folder") /workspace/cdnready/[cdnreadyfoldername]
		button(onclick='$("#cleanup").text("working");$.get("/cleanup?cdnromfoldername=" + $("#cdnromfoldername").val() + "&system=" + $("#system").val(), function(response) { $("#cleanup").text(response); })') GO!
		div#cleanup(class="response")